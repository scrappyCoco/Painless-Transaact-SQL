inspection.code.style.group=Code style
inspection.ddl.group=DDL
inspection.dml.group=DML
inspection.function.string.group=String functions
# Column alias definition
inspection.code.style.alias.as.equal.name=Column alias definition
inspection.code.style.alias.as.equal.option=Prefer Equals over AS
inspection.code.style.alias.as.equal.fix.family.as=Replace AS to Equals
inspection.code.style.alias.as.equal.fix.family.equals=Replace Equals to AS
inspection.code.style.alias.as.equal.fix.text.as=Replace ''... AS {0}'' to ''{0} = ...''
inspection.code.style.alias.as.equal.fix.text.equals=Replace ''{0} = ...'' to ''... AS {0}''
inspection.code.style.alias.as.equal.problem.as=Column alias definition can be replaced to Equals
inspection.code.style.alias.as.equal.problem.equals=Column alias definition can be replaced to AS (ANSI)
# Using CASE instead of CHOOSE and vice-versa
inspection.code.style.case.vs.choose.name=Using CASE instead of CHOOSE and vice-versa
inspection.code.style.case.vs.choose.option=Prefer CASE over CHOOSE
inspection.code.style.case.vs.choose.problem.case.to.choose=CASE can be replaced with CHOOSE
inspection.code.style.case.vs.choose.problem.choose.to.case=CHOOSE can be replaced with CASE
inspection.code.style.case.vs.choose.fix.case.to.choose=Replace CASE to CHOOSE
inspection.code.style.case.vs.choose.fix.choose.to.case=Replace CHOOSE to CASE
# Semicolon at the end of statement
inspection.code.style.semicolon.at.the.end.name=Semicolon at the end of statement
inspection.code.style.semicolon.at.the.end.option=Prefer semicolon
inspection.code.style.semicolon.at.the.end.fix.add=Add semicolon at the end of the statement
inspection.code.style.semicolon.at.the.end.fix.remove=Remove semicolon at the end of the statement
# READONLY keyword check
inspection.ddl.readonly.missing.name=READONLY keyword check
inspection.ddl.readonly.missing.problem=READONLY keyword was missing for the table-valued parameter {0}
inspection.ddl.readonly.missing.fix.family=Add READONLY to table-valued parameter
inspection.ddl.readonly.missing.fix.text=Add READONLY to {0}
# READONLY modification check
inspection.dml.readonly.modification.name=READONLY modification check
inspection.dml.readonly.modification.problem=The table-valued parameter {0} is READONLY and can not be modified
# Redundant DISTINCT keyword in set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.name=Redundant DISTINCT keyword in set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.problem=Redundant DISTINCT in context of {0}
inspection.dml.redundant.distinct.keyword.in.set.operators.fix.family=Remove DISTINCT in context of set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.fix.text=Remove DISTINCT in context of {0}
# Check for semicolon before CTE
inspection.dml.semicolon.cte.name=Check for semicolon before CTE (Common Table Expression)
inspection.dml.semicolon.cte.problem=Common Table Expression must be followed by the semicolon or BEGIN
inspection.dml.semicolon.cte.fix=Add semicolon before WITH
# Redundant ORDER BY when insert value to clustered index column
dml.ms.order.by.cl.ix.name=Redundant ORDER BY when insert value to clustered index column
dml.ms.order.by.cl.ix.problem=Redundant ORDER BY when inserting into clustered index columns
dml.ms.order.by.cl.ix.fix=Remove redundant ORDER BY
# Object was renamed but sys.syscomments holds old name in text
inspection.ddl.renamed.name=Renamed objects not reflected in routine text
inspection.ddl.renamed.problem=The header of routine {0} is obsolete, it was renamed into {1}
inspection.ddl.renamed.fix.family=Replace obsolete name to actual
inspection.ddl.renamed.fix.text=Replace {0} to {1}
# Substring inspection
inspection.function.substring.name=SUBSTRING function check
inspection.function.substring.problem=SUBSTRING can be replaced to LEFT
inspection.function.substring.fix.family=Replace SUBSTRING to LEFT
# Trim
inspection.function.trim.name=TRIM function check
inspection.function.trim.problem=LTRIM/RTRIM can be replaced to TRIM
inspection.function.trim.fix.family=Replace the sequence of LTRIM/RTRIM to single TRIM