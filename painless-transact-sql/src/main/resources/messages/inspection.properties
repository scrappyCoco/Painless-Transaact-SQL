#
# Copyright [2020] Coding4fun
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

inspection.code.style.group=Code style
inspection.code.naming.convention.group=Naming convention
inspection.code.naming.convention.database.object.group=Objects
inspection.ddl.group=DDL
inspection.dml.group=DML
inspection.function.string.group=String functions
# Column alias definition
inspection.code.style.alias.as.equal.name=Column alias definition
inspection.code.style.alias.as.equal.option=Prefer to Equals over AS
inspection.code.style.alias.as.equal.fix.family.as=Replace AS to Equals
inspection.code.style.alias.as.equal.fix.family.equals=Replace Equals to AS
inspection.code.style.alias.as.equal.fix.text.as=Replace ''... AS {0}'' to ''{0} = ...''
inspection.code.style.alias.as.equal.fix.text.equals=Replace ''{0} = ...'' to ''... AS {0}''
inspection.code.style.alias.as.equal.problem.as=Column alias definition can be replaced to Equals
inspection.code.style.alias.as.equal.problem.equals=Column alias definition can be replaced to AS (ANSI)
# Using CASE instead of CHOOSE and vice-versa
inspection.code.style.case.vs.choose.name=Using CASE instead of CHOOSE and vice-versa
inspection.code.style.case.vs.choose.option=Prefer CASE over CHOOSE
inspection.code.style.case.vs.choose.problem.case.to.choose=CASE can be replaced with CHOOSE
inspection.code.style.case.vs.choose.problem.choose.to.case=CHOOSE can be replaced with CASE
inspection.code.style.case.vs.choose.fix.case.to.choose=Replace CASE to CHOOSE
inspection.code.style.case.vs.choose.fix.choose.to.case=Replace CHOOSE to CASE
# Semicolon at the end of statement
inspection.code.style.semicolon.at.the.end.name=Semicolon at the end of statement
inspection.code.style.semicolon.at.the.end.option=Prefer semicolon
inspection.code.style.semicolon.at.the.end.fix.add=Add the semicolon at the end of the statement
inspection.code.style.semicolon.at.the.end.fix.remove=Remove semicolon at the end of the statement
# READONLY keyword check
inspection.ddl.readonly.missing.name=READONLY keyword check
inspection.ddl.readonly.missing.problem=READONLY keyword was missing for the table-valued parameter {0}
inspection.ddl.readonly.missing.fix.family=Add READONLY to table-valued parameter
inspection.ddl.readonly.missing.fix.text=Add READONLY to {0}
# READONLY modification check
inspection.dml.readonly.modification.name=READONLY modification check
inspection.dml.readonly.modification.problem=The table-valued parameter {0} is READONLY and can not be modified
# Redundant DISTINCT keyword in set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.name=Redundant DISTINCT keyword in set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.problem=Redundant DISTINCT in context of {0}
inspection.dml.redundant.distinct.keyword.in.set.operators.fix.family=Remove DISTINCT in context of set operators
inspection.dml.redundant.distinct.keyword.in.set.operators.fix.text=Remove DISTINCT in context of {0}
# Check for implicit column list in DML
implicit.column.list.name=Check for implicit column list in DML
implicit.column.list.problem=Use implicit column list is a bad practice
implicit.column.list.fix.family=Specify explicit column list
# Check for the semicolon before CTE
inspection.dml.semicolon.cte.name=Check for the semicolon before CTE (Common Table Expression)
inspection.dml.semicolon.cte.problem=Common Table Expression must be followed by the semicolon or BEGIN
inspection.dml.semicolon.cte.fix=Add the semicolon before WITH
# Redundant ORDER BY when insert value to clustered index column
dml.ms.order.by.cl.ix.name=Redundant ORDER BY when insert value to clustered index column
dml.ms.order.by.cl.ix.problem=Redundant ORDER BY when inserting into clustered index columns
dml.ms.order.by.cl.ix.fix=Remove redundant ORDER BY
# Warnings for built-in functions
dml.built.in.routine.name=Warnings for built-in routines
dml.built.in.routine.string.split.problem=The size of separator must be 1
# Object was renamed but sys.syscomments holds old name in text
inspection.ddl.renamed.name=Renamed objects not reflected in routine text
inspection.ddl.renamed.problem=The header of routine {0} is obsolete, it was renamed into {1}
inspection.ddl.renamed.fix.family=Replace obsolete name to actual
inspection.ddl.renamed.fix.text=Replace {0} to {1}
# Substring inspection
inspection.function.substring.name=SUBSTRING function check
inspection.function.substring.problem=SUBSTRING can be replaced to LEFT
inspection.function.substring.fix.family=Replace SUBSTRING to LEFT
# Trim
inspection.function.trim.name=TRIM function check
inspection.function.trim.problem=LTRIM/RTRIM can be replaced to TRIM
inspection.function.trim.fix.family=Replace the sequence of LTRIM/RTRIM to single TRIM
# Redundant qualifier
redundant.qualifier.name=Redundant qualifier check
redundant.qualifier.problem=The redundant qualifier {0}
redundant.qualifier.fix.text=Remove the redundant qualifier {0}
redundant.qualifier.fix.family=Remove redundant qualifier
# Implicitly VARCHAR length
implicitly.varchar.length.name=Prefer implicitly length in VARCHAR
implicitly.varchar.length.problem=The length of VARCHAR by default is 30
implicitly.varchar.length.fix.text=Set implicitly length to {0}(30)
implicitly.varchar.length.fix.family=SET implicitly length to VARCHAR
# Cursor definition check
cursor.definition.check.name=Check for the CURSOR definition
cursor.definition.check.problem.set=In CURSOR definition can be set only one of: {0}
cursor.definition.check.problem.update.incompatible={0} is incompatible with UPDATE
cursor.definition.check.problem.fast.forward={0} is redundant with FAST_FORWARD
cursor.definition.check.fix.text=Remove {0}
cursor.definition.check.fix.family=Remove element
# Replace string to REPLICATE
string.to.replicate.name=Replace string to REPLICATE
string.to.replicate.description=''{0}'' can be replaced to {1}
string.to.replicate.fix.text=Replace ''{0}'' to {1}
string.to.replicate.fix.family=Replace string to REPLICATE
# Type Compatibility
type.compatibility.name=Check for type compatibility
type.compatibility.explicit=Explicit type convert required from {0} to {1}
type.compatibility.implicit=An implicit convert from {0} to {1}
type.compatibility.restrict={0} is incompatible with {1}
# Missing column
missing.column.name=Missing column
missing.column.problem=The following columns must be specified: {0}
# Unused columns in the variable/temp table
unused.column.name=Unused column
unused.column.problem=Column {0} is never used
unused.column.fix.family=Remove unused column
unused.column.fix.text=Remove unused column {0}
# Name Convention
name.convention.problem=Name of the object does not match regex: {0}
name.convention.settings.pattern=Pattern
name.convention.settings.description=Description

name.convention.db.name=Database name convention
name.convention.db.default.pattern=[A-Z]+([_][A-Z]+)*
name.convention.db.default.description=Database names should be in UPPER_CASE

name.convention.table.name=Table name convention
name.convention.table.default.pattern=([A-Z][a-z]+)+
name.convention.table.default.description=Table names should be in PascalCase

name.convention.column.name=Column name convention
name.convention.column.default.pattern=([A-Z][a-z]+)+
name.convention.column.default.description=Column names should be in PascalCase

name.convention.column.store.index.name=Column store index name convention
name.convention.column.store.index.default.pattern=(((?<=\\bclustered\\b.{1,500})C)|((?<=\\bnonclustered\\b).{0}))CS_\\k<table>_([A-Z][a-z]+)+
name.convention.column.store.index.default.description=Columnstore index name should be in PascalCase and starts with CS_TableName or CCS_TableName

name.convention.default.constraint.name=Default constraint name convention
name.convention.default.constraint.default.pattern=DF_\\k<schema>_\\k<table>_([A-Z][a-z]+)+
name.convention.default.constraint.default.description=Default constraint name should be in PascalCase. Example: DF_TableName_DefaultName

name.convention.index.name=Index name convention
name.convention.index.default.pattern=(((?<=\\bclustered\\b.{1,500})C)|((?<=\\bnonclustered\\b).{0}))IX_\\k<schema>_\\k<table>_([A-Z][a-z]+)+
name.convention.index.default.description=Index name should be in PascalCase. Example: DF_TableName_DefaultName

name.convention.partition.function.name=Partition function name convention
name.convention.partition.function.default.pattern=PF_([A-Z][a-z]+)+
name.convention.partition.function.default.description=Partition function name should be in PascalCase. Example: DF_TableName_DefaultName

name.convention.partition.schema.name=Partition schema name convention
name.convention.partition.schema.default.pattern=PS_([A-Z][a-z]+)+
name.convention.partition.schema.default.description=Partition schema name should be in PascalCase. Example: DF_TableName_DefaultName

name.convention.procedure.name=Procedure name convention
name.convention.procedure.default.pattern=UP_([A-Z][a-z]+)+
name.convention.procedure.default.description=Procedure name should be in PascalCase. Example: DF_TableName_DefaultName

name.convention.schema.name=Schema name convention
name.convention.schema.default.pattern=[a-z]+
name.convention.schema.default.description=Schema name should be in lowercase. Example: DF_TableName_DefaultName

name.convention.sequence.name=Sequence name convention
name.convention.sequence.default.pattern=SEQ_([A-Z][a-z]+)+
name.convention.sequence.default.description=Sequence name should be in lowercase. Example: DF_TableName_DefaultName

name.convention.trigger.name=Trigger name convention
name.convention.trigger.default.pattern=TR_\\k<table>_([A-Z][a-z]+)+_(((?<=\binsert\b)i)|((?<=\bupdate\b)u)|((?<=\bdelete\b)d))
name.convention.trigger.default.description=Trigger name should be in lowercase. Example: TR_TableName_DefaultName